import express from "express";
import bodyParser from "body-parser";
import cors from "cors";
import TelegramBot from "node-telegram-bot-api";
import path from "path";
import { fileURLToPath } from "url";
import dotenv from "dotenv";

dotenv.config(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
const PORT = process.env.PORT || 8000;

// ===== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram =====
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const CHAT_ID = process.env.CHAT_ID;

if (!TELEGRAM_TOKEN || !CHAT_ID) {
  console.error("‚ùå Telegram —Ç–æ–∫–µ–Ω –∏–ª–∏ chat_id –Ω–µ —É–∫–∞–∑–∞–Ω –≤ .env");
  process.exit(1);
}

const bot = new TelegramBot(TELEGRAM_TOKEN); // –±–µ–∑ polling

// ===== Middleware =====
app.use(cors());
app.use(bodyParser.json());

// ===== –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏–∫–∏ =====
app.use(express.static(path.join(__dirname, "public")));

// ===== –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è —Ñ–æ—Ä–º =====
async function sendTelegram(name, phone, type, estimatedPrice) {
  const escapeHTML = (str) =>
    str.replace(/&/g, "&amp;")
       .replace(/</g, "&lt;")
       .replace(/>/g, "&gt;");

  let message = `<b>üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</b>\n`;
  message += `<b>–ò–º—è:</b> ${escapeHTML(name)}\n`;
  message += `<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${escapeHTML(phone)}\n`;
  message += `<b>–¢–∏–ø –∑–∞—è–≤–∫–∏:</b> ${escapeHTML(type)}`;
  if (estimatedPrice) message += `\n<b>–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</b> ${escapeHTML(estimatedPrice.toString())} ‚ÇΩ`;

  try {
    await bot.sendMessage(CHAT_ID, message, { parse_mode: "HTML" });
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", err);
  }
}

app.post("/api/request", async (req, res) => {
  const { name, phone, type, estimatedPrice } = req.body;

  if (!name || !phone || !type) {
    return res.status(400).json({ status: "error", message: "–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã" });
  }

  try {
    await sendTelegram(name, phone, type, estimatedPrice);
    res.json({ status: "success", message: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram!" });
  } catch (err) {
    console.error(err);
    res.status(500).json({ status: "error", message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
});

// ===== –õ—é–±–æ–π GET, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /api ‚Äî –æ—Ç–¥–∞—ë–º index.html =====
app.get(/^\/(?!api).*/, (req, res) => {
  res.sendFile(path.join(__dirname, "public", "index.html"));
});

// ===== –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ =====
bot.sendMessage(CHAT_ID, "‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω, Telegram –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–π").catch(console.error);

app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
